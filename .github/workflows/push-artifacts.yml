---
name: Push artifacts to package.cosmian.com

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      destination:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string

jobs:
  ##############################################################################
  ### Packages
  ##############################################################################
  packages:
    name: push ${{ inputs.project-name }} to package.cosmian.com
    runs-on: [self-hosted, not-sgx]
    container:
      image: cosmian/docker_doc_ci
      volumes:
        - /home/cosmian/.ssh/id_rsa:/root/.ssh/id_rsa

    env:
      ARCHIVE_NAMES: rockylinux9-${{ inputs.debug_or_release }} fips_ubuntu_24_04-${{ inputs.debug_or_release }} ubuntu_24_04-${{ inputs.debug_or_release
        }} macos_arm-${{ inputs.debug_or_release }} windows-${{ inputs.debug_or_release }}

    steps:
      - run: rm -rf ${{ inputs.project-name }}_* fips_* windows* ubuntu* macos* rockylinux* centos*
      - uses: actions/download-artifact@v4

      - run: find .

      - name: Creating zip to be attached to release
        shell: bash
        run: |
          set -xe
          apt update -y
          apt-get install -y zip
          for archive_name in $ARCHIVE_NAMES; do
            zip -r "$archive_name".zip "$archive_name"
          done

          # Warning, no all binaries in debug, only in release
          if [ "${{ inputs.debug_or_release }}" = "release" ]; then
            zip -r ubuntu_22_04-release.zip ubuntu_22_04-release
            zip -r rockylinux8-release.zip rockylinux8-release
          fi

      - name: Push to package.cosmian.com
        shell: bash
        run: |
          set -ex
          if [[ "${GITHUB_REF}" =~ 'refs/tags/' ]]; then
            BRANCH="${GITHUB_REF_NAME}"
          else
            BRANCH="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi
          DESTINATION_DIR=/mnt/package/${{ inputs.destination }}/$BRANCH
          ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa *.zip cosmian@package.cosmian.com:$DESTINATION_DIR/

          if [ "${{ inputs.debug_or_release }}" = "release" ]; then
            ssh -o 'StrictHostKeyChecking no' -i /root/.ssh/id_rsa cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR/{rockylinux8,rockylinux9,ubuntu-22.04,ubuntu-24.04}

            # rockylinux packages
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa rockylinux8-${{ inputs.debug_or_release }}/__w/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/generate-rpm/*.rpm \
              cosmian@package.cosmian.com:$DESTINATION_DIR/rockylinux8
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa rockylinux9-${{ inputs.debug_or_release }}/__w/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/generate-rpm/*.rpm \
              cosmian@package.cosmian.com:$DESTINATION_DIR/rockylinux9

            # Ubuntu packages
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa ubuntu_22_04-${{ inputs.debug_or_release }}/home/runner/work/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/debian/*.deb \
              cosmian@package.cosmian.com:$DESTINATION_DIR/ubuntu-22.04
            scp -o 'StrictHostKeyChecking no' \
              -i /root/.ssh/id_rsa *ubuntu_24_04-${{ inputs.debug_or_release }}/home/runner/work/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/debian/*.deb \
              cosmian@package.cosmian.com:$DESTINATION_DIR/ubuntu-24.04
          fi

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.zip
            rockylinux9-release/__w/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/generate-rpm/*.rpm
            ubuntu_24_04-release/home/runner/work/${{ inputs.project-name }}/${{ inputs.project-name }}/target/x86_64-unknown-linux-gnu/debian/*.deb
