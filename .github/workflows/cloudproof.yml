---
name: Build all interfaces

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      toolchain:
        required: true
        type: string
      kms-version:
        required: true
        type: string
      findex-cloud-version:
        required: true
        type: string
      branch-java:
        required: true
        type: string
      branch-js:
        required: true
        type: string
      branch-kms-js:
        required: true
        type: string
      branch-flutter:
        required: true
        type: string
      branch-python:
        required: true
        type: string
      bench-features:
        required: false
        default: ''
        type: string
      exclusions:
        required: false
        type: string
        default: ''

jobs:
  ##############################################################################
  ### Check if release can be done
  ##############################################################################
  pre-build:
    uses: ./.github/workflows/cargo-nursery-base.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      exclusions: ${{ inputs.exclusions }}

  cargo-bench:
    uses: ./.github/workflows/cargo-bench.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      features: ${{ inputs.bench-features }}
      exclusions: ${{ inputs.exclusions }}

  ##############################################################################
  ### Build all interfaces
  ##############################################################################
  windows:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-pc-windows-gnu
      os: ubuntu-20.04
      pre-requisites: |
        sudo apt-get update && sudo apt-get install -y gcc-mingw-w64-x86-64 binutils-mingw-w64-x86-64 zip
        cargo install cross --git https://github.com/cross-rs/cross || true
        cross test --release --features ffi --target x86_64-pc-windows-gnu -- --skip redis
        cross build --features ffi --target x86_64-pc-windows-gnu
        cross build --release --features ffi --target x86_64-pc-windows-gnu
      artifacts: |
        target/x86_64-pc-windows-gnu/release/*.dll*
        target/x86_64-pc-windows-gnu/release/*.dll.a
        target/wheels/*win_amd64.whl
      debug_artifacts: target/x86_64-pc-windows-gnu/debug/*.dll target/x86_64-pc-windows-gnu/debug/*.dll.a

  darwin:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-apple-darwin
      os: macos-12
      pre-requisites: |
        rustup target add aarch64-apple-ios x86_64-apple-ios
        cargo install --locked cargo-lipo || true
        cargo lipo --all --features ffi
        cargo lipo --all --release --features ffi
        ls -al target/universal/release/
        cargo test --release --features ffi --target x86_64-apple-darwin -- --skip redis
        cargo build --features ffi --target x86_64-apple-darwin
        cargo build --release --features ffi --target x86_64-apple-darwin

      artifacts: |
        target/x86_64-apple-darwin/release/*.dylib
        target/universal/release/*.a
        target/wheels/*cp37-abi3*.whl
      debug_artifacts: target/x86_64-apple-darwin/debug/*.dylib target/universal/debug/*.a

  wasm:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: wasm32-unknown-unknown
      os: ubuntu-20.04
      pre-requisites: |
        cargo install --locked wasm-pack || true
        pushd crates/aesgcm
        wasm-pack build -d ../../target/web/aesgcm --target web --release --features wasm
        wasm-pack test --node --features wasm
        popd

        pushd crates/anonymization
        wasm-pack build -d ../../target/web/anonymization --target web --release --features wasm
        wasm-pack test --node --features wasm
        popd

        pushd crates/cover_crypt
        wasm-pack build -d ../../target/web/cover_crypt --target web --release --features wasm
        wasm-pack test --node --features wasm
        popd

        pushd crates/findex
        wasm-pack build -d ../../target/web/findex --target web --release --features wasm
        # wasm-pack test --node --features wasm
        popd

        pushd crates/ecies
        wasm-pack build -d ../../target/web/ecies --target web --release --features wasm
        wasm-pack test --node --features wasm
        popd

        pushd crates/fpe
        wasm-pack build -d ../../target/web/fpe --target web --release --features wasm
        wasm-pack test --node --features wasm
        popd

      artifacts: |
        ./target/web/aesgcm
        ./target/web/anonymization
        ./target/web/cover_crypt
        ./target/web/ecies
        ./target/web/findex
        ./target/web/fpe

  android:
    uses: ./.github/workflows/ndk.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      feature: ffi

  linux-centos7:
    uses: ./.github/workflows/cargo_in_docker.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-unknown-linux-gnu
      os: ubuntu-20.04
      pre-requisites: |
        cargo install --locked cbindgen || true
        yum -y install zip
      artifacts: |
        target/x86_64-unknown-linux-gnu/release/*.so
        target/*.h
        target/non_regression_vector.json
        target/sqlite.db
      debug_artifacts: target/x86_64-unknown-linux-gnu/debug/*.so

  pyo3-linux:
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/pyo3/maturin:v0.14.1
      options: --entrypoint ''
    steps:
      - uses: actions/checkout@v3
      - run: rustup default ${{ inputs.toolchain }}

      - name: Python maturin build
        run: |
          rm -f target/wheels/*.whl | true

          pushd crates/aesgcm
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/anonymization
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/cover_crypt
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/findex
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/ecies
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/fpe
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

      - name: Upload python files
        uses: actions/upload-artifact@v3
        with:
          name: python-x86_64-unknown-linux-gnu
          path: |
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error

  merge-linux-artifacts:
    needs:
      - linux-centos7
      - pyo3-linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
      - name: List directory
        run: find .

      - name: Clean duplicated folder
        run: rm -rf x86_64-unknown-linux-gnu

      - name: Upload python files
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            python-x86_64-unknown-linux-gnu/*
            x86_64-unknown-linux-gnu/*
          retention-days: 1
          if-no-files-found: error

  ##############################################################################
  ### Core python tests
  ##############################################################################
  pyo3-tests:
    needs:
      - windows
      - darwin
      - pyo3-linux
    name: pyo3-tests ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            source-dir: x86_64-apple-darwin/wheels
          - os: ubuntu-20.04
            source-dir: python-x86_64-unknown-linux-gnu
          - os: windows-2019
            source-dir: x86_64-pc-windows-gnu/wheels

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip # caching pip dependencies

      - name: List directory
        if: contains(runner.os, 'Linux') || contains(runner.os, 'macOS')
        run: find .

      - name: Install requirements
        run: |
          pip install -r crates/aesgcm/python/requirements.txt
          pip install -r crates/anonymization/python/requirements.txt
          pip install -r crates/cover_crypt/python/requirements.txt
          pip install -r crates/ecies/python/requirements.txt
          pip install -r crates/findex/python/requirements.txt
          pip install -r crates/fpe/python/requirements.txt

      - name: Install .whl
        run: |
          ls ${{ matrix.source-dir }}/*.whl
          pip install --force-reinstall $(ls ${{ matrix.source-dir }}/*.whl)

      - name: Python tests
        run: |
          pushd crates/aesgcm/python
          mypy tests/aesgcm_test.py
          popd
          python crates/aesgcm/python/tests/aesgcm_test.py

          pushd crates/anonymization/python
          mypy tests/anonymization_test.py
          popd
          python crates/anonymization/python/tests/anonymization_test.py

          pushd crates/cover_crypt/python
          mypy tests/cover_crypt_test.py
          popd
          python crates/cover_crypt/python/tests/cover_crypt_test.py

          pushd crates/ecies/python
          mypy tests/ecies_test.py
          popd
          python crates/ecies/python/tests/ecies_test.py

          pushd crates/findex/python
          mypy tests/findex_test.py
          popd
          ## Following test cannot be run on MacOS/Windows Github CI runners (no docker) but this complete test is directly run by `cloudproof_rust` CI
          # python crates/findex/python/tests/findex_test.py

          pushd crates/fpe/python
          mypy tests/fpe_test.py
          popd
          python crates/fpe/python/tests/fpe_test.py

  ##############################################################################
  ### Packages
  ##############################################################################
  packages:
    name: push to package.cosmian.com
    needs:
      - windows
      - darwin
      - wasm
      - android
      - linux-centos7
      - merge-linux-artifacts
      - pyo3-tests
    uses: ./.github/workflows/cloudproof-packages.yml
    with:
      project-name: ${{ inputs.project-name }}

  ##############################################################################
  ### Cloudproof Java library
  ##############################################################################
  java-windows:
    needs:
      - windows
    uses: ./.github/workflows/cloudproof_java.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-pc-windows-gnu
      extension: dll
      destination: win32-x86-64
      os: windows-2019
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  java-darwin:
    needs:
      - darwin
    uses: ./.github/workflows/cloudproof_java.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-apple-darwin
      extension: dylib
      destination: darwin-x86-64
      os: macos-12
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  java-linux:
    needs:
      - linux-centos7
    uses: ./.github/workflows/cloudproof_java_in_docker.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version }}
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  ##############################################################################
  ### Cloudproof Flutter library
  ##############################################################################
  flutter-linux:
    needs:
      - linux-centos7
      - android
    uses: ./.github/workflows/cloudproof_flutter.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-unknown-linux-gnu
      extension: so
      android_build: true
      regression_files: |
        ./build/non_regression_vector.json
        ./build/sqlite.db
        # ./lib/src/cover_crypt/generated_bindings.dart
        # ./lib/src/findex/generated_bindings.dart

  flutter-darwin:
    needs:
      - darwin
      - linux-centos7 # for the cloudproof.h
    uses: ./.github/workflows/cloudproof_flutter_darwin.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-apple-darwin
      extension: dylib

  ##############################################################################
  ### Cloudproof Python library
  ##############################################################################
  python-linux:
    needs:
      - pyo3-linux
    uses: ./.github/workflows/cloudproof_python.yml
    with:
      branch: ${{ inputs.branch-python }}
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version }}
      regression_files: |
        ./tests/data/export/non_regression_vector.json
        ./tests/data/export/sqlite.db

  ##############################################################################
  ### Cloudproof JS library
  ##############################################################################
  js:
    needs:
      - wasm
    uses: ./.github/workflows/cloudproof_js.yml
    with:
      branch: ${{ inputs.branch-js }}
      target: wasm32-unknown-unknown
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version}}
      regression_files: |
        ./node_modules/non_regression_vector.json
        ./node_modules/sqlite.db

  ##############################################################################
  ### Cloudproof KMS JS library
  ##############################################################################
  kms_js:
    uses: ./.github/workflows/cloudproof_kms_js.yml
    with:
      branch: ${{ inputs.branch-kms-js }}
      kms-version: ${{ inputs.kms-version }}

  ##############################################################################
  ### Cross languages tests
  ##############################################################################
  cross-java-linux:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_java_in_docker.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version }}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       src/test/resources/cover_crypt/non_regression/flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          src/test/resources/cover_crypt/non_regression/java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            src/test/resources/cover_crypt/non_regression/js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        src/test/resources/cover_crypt/non_regression/python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json src/test/resources/cover_crypt/non_regression/rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         src/test/resources/findex/non_regression/flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            src/test/resources/findex/non_regression/java_sqlite.db
        cp ./cloudproof_js/sqlite.db              src/test/resources/findex/non_regression/js_sqlite.db
        cp ./cloudproof_python/sqlite.db          src/test/resources/findex/non_regression/python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db src/test/resources/findex/non_regression/rust_sqlite.db

  cross-js:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_js.yml
    with:
      branch: ${{ inputs.branch-js }}
      target: wasm32-unknown-unknown
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version}}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       tests/data/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          tests/data/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            tests/data/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        tests/data/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json tests/data/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         tests/data/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            tests/data/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              tests/data/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          tests/data/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db tests/data/findex/non_regression/copy_rust_sqlite.db

  cross-python:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_python.yml
    with:
      branch: ${{ inputs.branch-python }}
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ inputs.kms-version }}
      findex-cloud-version: ${{ inputs.findex-cloud-version }}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       tests/data/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          tests/data/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            tests/data/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        tests/data/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json tests/data/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         tests/data/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            tests/data/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              tests/data/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          tests/data/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db tests/data/findex/non_regression/copy_rust_sqlite.db

  cross-flutter-linux:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_flutter.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-unknown-linux-gnu
      extension: so
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       test/resources/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          test/resources/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            test/resources/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        test/resources/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json test/resources/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         test/resources/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            test/resources/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              test/resources/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          test/resources/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db test/resources/findex/non_regression/copy_rust_sqlite.db

  ##############################################################################
  ### Releases
  ##############################################################################
  release:
    name: release
    needs:
      - pre-build
      - android
      - merge-linux-artifacts
      - pyo3-tests
      - packages
      - java-darwin
      - java-windows
      - flutter-darwin
      - cross-java-linux
      - cross-js
      - cross-flutter-linux
      - cross-python
      - kms_js
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - archive_name: windows
            target: x86_64-pc-windows-gnu
          - archive_name: linux
            target: x86_64-unknown-linux-gnu
          - archive_name: darwin
            target: x86_64-apple-darwin
          - archive_name: wasm
            target: wasm32-unknown-unknown
          - archive_name: android
            target: android

    steps:
      - uses: actions/download-artifact@v3
      - run: find .

      - name: Creating zip to be attached to release
        run: |
          sudo apt-get install -y zip
          zip -r ${{ matrix.archive_name }}.zip ${{ matrix.target }}

      - name: Test artifact existence
        run: |
          set -x
          test -f ${ARCHIVE_NAME}.zip
        env:
          ARCHIVE_NAME: ${{ matrix.archive_name }}

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.archive_name }}.zip

  ##############################################################################
  ### Core publish
  ##############################################################################
  python-publish:
    needs: release
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - source-dir: x86_64-apple-darwin/wheels
          - source-dir: python-x86_64-unknown-linux-gnu
          - source-dir: x86_64-pc-windows-gnu/wheels

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip # caching pip dependencies

      - name: List directory
        if: contains(runner.os, 'Linux')
        run: find .

      - name: Install requirements
        run: |
          pip install twine

      - name: Publish .whl
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/cloudproof_aesgcm*.whl || true
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/cloudproof_anonymization*.whl || true
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/cloudproof_fpe*.whl || true
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/cover_crypt*.whl || true
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/cloudproof_ecies*.whl || true
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/findex*.whl || true
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  wasm-publish:
    needs: release
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}
          target: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: |
          cargo install wasm-pack

      - name: Publishing Wasm
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc

          pushd crates/aesgcm
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/anonymization
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/cover_crypt
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/ecies
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/findex
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/fpe
          wasm-pack build --target web --release --features wasm
          wasm-pack pack
          wasm-pack publish || true
          popd

        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  cargo-publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Publishing
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "[registry]" > ~/.cargo/credentials
          echo "token = \"$CRATES_IO\"" >> ~/.cargo/credentials

          pushd crates/aesgcm
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/anonymization
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/cover_crypt
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/ecies
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/findex
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/fpe
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/cloudproof
          cargo publish --token $CRATES_IO || true
          popd
        env:
          CRATES_IO: ${{ secrets.CRATES_IO }}

  cleanup:
    needs:
      - release
    uses: ./.github/workflows/cleanup_cache.yml
    secrets: inherit
