---
name: Build all interfaces

on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      toolchain:
        required: true
        type: string
      kms-version:
        required: true
        type: string
      branch-java:
        required: true
        type: string
      branch-js:
        required: true
        type: string
      branch-flutter:
        required: true
        type: string
      branch-python:
        required: true
        type: string
      bench-features:
        required: false
        default: ''
        type: string

jobs:
  ##############################################################################
  ### Check if release can be done
  ##############################################################################
  pre-build:
    uses: ./.github/workflows/cargo-nursery-base.yml
    with:
      toolchain: ${{ inputs.toolchain }}
  cargo-bench:
    uses: ./.github/workflows/cargo-bench.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      features: ${{ inputs.bench-features }}

  ##############################################################################
  ### Build all interfaces
  ##############################################################################
  windows:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-pc-windows-gnu
      feature: ffi,cloud
      os: ubuntu-20.04
      pre-requisites: sudo apt-get update && sudo apt-get install -y gcc-mingw-w64
      artifacts: |
        target/x86_64-pc-windows-gnu/release/*.dll
        target/*.h
        target/wheels/*win_amd64.whl
  darwin:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-apple-darwin
      feature: ffi
      os: macos-12
      pre-requisites: |
        rustup target add aarch64-apple-ios x86_64-apple-ios
        cargo install --locked cargo-lipo || true
        cargo lipo --all --release --features ffi
        ls -al target/universal/release

      artifacts: |
        target/x86_64-apple-darwin/release/*.dylib
        target/*.h
        target/universal/release/*.a
        target/wheels/*cp37-abi3*.whl
  wasm:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: wasm32-unknown-unknown
      feature: wasm_bindgen
      os: ubuntu-20.04
      pre-requisites: cargo install --locked wasm-pack || true
      artifacts: |
        ./target/web/cover_crypt
        ./target/web/findex
        ./target/web/fpe
  android:
    uses: ./.github/workflows/ndk.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      feature: ffi

  linux-ubuntu:
    uses: ./.github/workflows/cargo.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-unknown-linux-gnu
      feature: ffi,cloud
      os: ubuntu-20.04
      pre-requisites: |
        sudo apt update
        sudo apt install -y gnuplot
        cat /proc/cpuinfo
      artifacts: ''

  linux-centos7:
    uses: ./.github/workflows/cargo_in_docker.yml
    with:
      toolchain: ${{ inputs.toolchain }}
      target: x86_64-unknown-linux-gnu
      feature: ffi,cloud
      os: ubuntu-20.04
      pre-requisites: echo
      artifacts: |
        target/x86_64-unknown-linux-gnu/release/*.so
        target/*.h
        target/non_regression_vector.json
        target/sqlite.db
  pyo3-linux:
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/pyo3/maturin:v0.14.1
      options: --entrypoint ''
    steps:
      - uses: actions/checkout@v3
      - run: rustup default ${{ inputs.toolchain }}

      - name: Python maturin build
        run: |
          pushd crates/cover_crypt
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/findex
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

          pushd crates/fpe
          maturin build --compatibility manylinux_2_17 --release --features python --target-dir target_python
          popd

      - name: Upload python files
        uses: actions/upload-artifact@v3
        with:
          name: python-x86_64-unknown-linux-gnu
          path: |
            target/wheels/*.whl
          retention-days: 1
          if-no-files-found: error
  merge-linux-artifacts:
    needs:
      - linux-centos7
      - pyo3-linux
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
      - name: Upload python files
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            python-x86_64-unknown-linux-gnu/*
            x86_64-unknown-linux-gnu/*
          retention-days: 1
          if-no-files-found: error

  ##############################################################################
  ### Core python tests
  ##############################################################################
  pyo3-tests:
    needs:
      - windows
      - darwin
      - pyo3-linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            source-dir: x86_64-apple-darwin/wheels
          - os: ubuntu-20.04
            source-dir: python-x86_64-unknown-linux-gnu
          - os: windows-2019
            source-dir: x86_64-pc-windows-gnu/wheels

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip # caching pip dependencies

      - name: List directory
        if: contains(runner.os, 'Linux')
        run: find .

      - name: Install requirements
        run: |
          pip install -r crates/cover_crypt/python/requirements.txt
          pip install -r crates/findex/python/requirements.txt
          pip install -r crates/fpe/python/requirements.txt

      - name: Install .whl
        run: |
          pip install --force-reinstall $(ls ${{ matrix.source-dir }}/*.whl)

      - name: Python tests
        run: |
          pushd crates/cover_crypt/python
          mypy tests/cover_crypt_test.py
          popd
          python crates/cover_crypt/python/tests/cover_crypt_test.py

          pushd crates/findex/python
          mypy tests/findex_test.py
          popd
          python crates/findex/python/tests/findex_test.py

          pushd crates/fpe/python
          mypy tests/fpe_test.py
          popd
          python crates/fpe/python/tests/fpe_test.py

  ##############################################################################
  ### Cloudproof Java library
  ##############################################################################
  java-windows:
    needs:
      - windows
    uses: ./.github/workflows/cloudproof_java.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-pc-windows-gnu
      extension: dll
      destination: win32-x86-64
      os: windows-2019
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  java-darwin:
    needs:
      - darwin
    uses: ./.github/workflows/cloudproof_java.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-apple-darwin
      extension: dylib
      destination: darwin-x86-64
      os: macos-12
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  java-linux:
    needs:
      - linux-centos7
    uses: ./.github/workflows/cloudproof_java_in_docker.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ inputs.kms-version }}
      regression_files: |
        ./target/non_regression_vector.json
        ./target/sqlite.db

  ##############################################################################
  ### Cloudproof Flutter library
  ##############################################################################
  flutter-linux:
    needs:
      - linux-centos7
    uses: ./.github/workflows/cloudproof_flutter.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-unknown-linux-gnu
      extension: so
      android_build: true
      regression_files: |
        ./build/non_regression_vector.json
        ./build/sqlite.db
        # ./lib/src/cover_crypt/generated_bindings.dart
        # ./lib/src/findex/generated_bindings.dart

  flutter-darwin:
    needs:
      - darwin
    uses: ./.github/workflows/cloudproof_flutter_darwin.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-apple-darwin
      extension: dylib

  ##############################################################################
  ### Cloudproof Python library
  ##############################################################################
  python-linux:
    needs:
      - pyo3-linux
    uses: ./.github/workflows/cloudproof_python.yml
    with:
      branch: ${{ inputs.branch-python }}
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ inputs.kms-version }}
      regression_files: |
        ./tests/data/export/non_regression_vector.json
        ./tests/data/export/sqlite.db

  ##############################################################################
  ### Cloudproof JS library
  ##############################################################################
  js:
    needs:
      - wasm
    uses: ./.github/workflows/cloudproof_js.yml
    with:
      branch: ${{ inputs.branch-js }}
      target: wasm32-unknown-unknown
      kms-version: ${{ inputs.kms-version }}
      regression_files: |
        ./node_modules/non_regression_vector.json
        ./node_modules/sqlite.db

  ##############################################################################
  ### Cross languages tests
  ##############################################################################
  cross-java-linux:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_java_in_docker.yml
    with:
      branch: ${{ inputs.branch-java }}
      target: x86_64-unknown-linux-gnu
      extension: so
      destination: linux-x86-64
      os: ubuntu-20.04
      kms-version: ${{ inputs.kms-version }}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       src/test/resources/cover_crypt/non_regression/flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          src/test/resources/cover_crypt/non_regression/java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            src/test/resources/cover_crypt/non_regression/js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        src/test/resources/cover_crypt/non_regression/python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json src/test/resources/cover_crypt/non_regression/rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         src/test/resources/findex/non_regression/flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            src/test/resources/findex/non_regression/java_sqlite.db
        cp ./cloudproof_js/sqlite.db              src/test/resources/findex/non_regression/js_sqlite.db
        cp ./cloudproof_python/sqlite.db          src/test/resources/findex/non_regression/python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db src/test/resources/findex/non_regression/rust_sqlite.db

  cross-js:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_js.yml
    with:
      branch: ${{ inputs.branch-js }}
      target: wasm32-unknown-unknown
      kms-version: ${{ inputs.kms-version }}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       tests/data/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          tests/data/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            tests/data/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        tests/data/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json tests/data/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         tests/data/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            tests/data/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              tests/data/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          tests/data/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db tests/data/findex/non_regression/copy_rust_sqlite.db

  cross-python:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_python.yml
    with:
      branch: ${{ inputs.branch-python }}
      target: x86_64-unknown-linux-gnu
      kms-version: ${{ inputs.kms-version }}
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       tests/data/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          tests/data/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            tests/data/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        tests/data/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json tests/data/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         tests/data/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            tests/data/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              tests/data/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          tests/data/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db tests/data/findex/non_regression/copy_rust_sqlite.db

  cross-flutter-linux:
    needs:
      - linux-centos7
      - flutter-linux
      - java-linux
      - js
      - python-linux
    uses: ./.github/workflows/cloudproof_flutter.yml
    with:
      branch: ${{ inputs.branch-flutter }}
      target: x86_64-unknown-linux-gnu
      extension: so
      copy_regression_files: |
        cp ./cloudproof_flutter/non_regression_vector.json       test/resources/cover_crypt/non_regression/copy_flutter_non_regression_vector.json
        cp ./cloudproof_java/non_regression_vector.json          test/resources/cover_crypt/non_regression/copy_java_non_regression_vector.json
        cp ./cloudproof_js/non_regression_vector.json            test/resources/cover_crypt/non_regression/copy_js_non_regression_vector.json
        cp ./cloudproof_python/non_regression_vector.json        test/resources/cover_crypt/non_regression/copy_python_non_regression_vector.json
        cp ./x86_64-unknown-linux-gnu/non_regression_vector.json test/resources/cover_crypt/non_regression/copy_rust_non_regression_vector.json
        cp ./cloudproof_flutter/sqlite.db         test/resources/findex/non_regression/copy_flutter_sqlite.db
        cp ./cloudproof_java/sqlite.db            test/resources/findex/non_regression/copy_java_sqlite.db
        cp ./cloudproof_js/sqlite.db              test/resources/findex/non_regression/copy_js_sqlite.db
        cp ./cloudproof_python/sqlite.db          test/resources/findex/non_regression/copy_python_sqlite.db
        cp ./x86_64-unknown-linux-gnu/sqlite.db test/resources/findex/non_regression/copy_rust_sqlite.db

  ##############################################################################
  ### Packages
  ##############################################################################
  packages:
    name: push to package.cosmian.com
    needs:
      - pre-build
      - android
      - merge-linux-artifacts
      - pyo3-tests
      - java-darwin
      - java-windows
      - flutter-darwin
      - linux-ubuntu
      - cross-java-linux
      - cross-js
      - cross-flutter-linux
      - cross-python
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/download-artifact@v3
      - run: find .

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%-m-%d-%H-%M-%S')"

      - name: Creating zip to be attached to release
        run: |
          zip -r all.zip x86* wasm* android

      - name: Push to package.cosmian.com
        run: |
          set -x
          echo "$PACKAGE_SSH_KEY" > ~/id_rsa
          chmod 600 ~/id_rsa
          DESTINATION_DIR=/mnt/package/${{ inputs.project-name }}/last_build/${{ github.head_ref }}/
          ssh -i ~/id_rsa -o "StrictHostKeyChecking no" cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -i ~/id_rsa -o "StrictHostKeyChecking no" all.zip cosmian@package.cosmian.com:$DESTINATION_DIR/
          rm ~/id_rsa
        env:
          PACKAGE_SSH_KEY: ${{ secrets.PACKAGE_SSH_KEY }}

      - name: Push to package.cosmian.com - tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -x
          echo "$PACKAGE_SSH_KEY" > ~/id_rsa
          chmod 600 ~/id_rsa
          DESTINATION_DIR=/mnt/package/${{ inputs.project-name }}/$VERSION
          ssh -i ~/id_rsa -o "StrictHostKeyChecking no" cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -i ~/id_rsa -o "StrictHostKeyChecking no" all.zip cosmian@package.cosmian.com:$DESTINATION_DIR/
          rm ~/id_rsa
        env:
          PACKAGE_SSH_KEY: ${{ secrets.PACKAGE_SSH_KEY }}
          VERSION: ${{ github.ref_name }}

  ##############################################################################
  ### Releases
  ##############################################################################
  release:
    name: release
    needs:
      - packages
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - archive_name: windows
            target: x86_64-pc-windows-gnu
          - archive_name: linux
            target: x86_64-unknown-linux-gnu
          - archive_name: darwin
            target: x86_64-apple-darwin
          - archive_name: wasm
            target: wasm32-unknown-unknown
          - archive_name: android
            target: android

    steps:
      - uses: actions/download-artifact@v3
      - run: find .

      - name: Creating zip to be attached to release
        run: |
          zip -r ${{ matrix.archive_name }}.zip ${{ matrix.target }}

      - name: Push to package.cosmian.com
        if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          set -x
          echo "$PACKAGE_SSH_KEY" > ~/id_rsa
          chmod 600 ~/id_rsa
          DESTINATION_DIR=/mnt/package/${{ inputs.project-name }}/last_build/${{ github.head_ref }}/
          ssh -i ~/id_rsa -o "StrictHostKeyChecking no" cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -i ~/id_rsa -o "StrictHostKeyChecking no" ${{ matrix.archive_name }}.zip cosmian@package.cosmian.com:$DESTINATION_DIR/
          rm ~/id_rsa
        env:
          PACKAGE_SSH_KEY: ${{ secrets.PACKAGE_SSH_KEY }}

      - name: Push to package.cosmian.com
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -x
          echo "$PACKAGE_SSH_KEY" > ~/id_rsa
          chmod 600 ~/id_rsa
          DESTINATION_DIR=/mnt/package/${{ inputs.project-name }}/$VERSION
          ssh -i ~/id_rsa -o "StrictHostKeyChecking no" cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp -i ~/id_rsa -o "StrictHostKeyChecking no" ${{ matrix.archive_name }}.zip cosmian@package.cosmian.com:$DESTINATION_DIR/
          DESTINATION_DIR=/mnt/package/${{ inputs.project-name }}/last_build
          ssh -i ~/id_rsa -o "StrictHostKeyChecking no" cosmian@package.cosmian.com rm -rf $DESTINATION_DIR
          rm ~/id_rsa
        env:
          PACKAGE_SSH_KEY: ${{ secrets.PACKAGE_SSH_KEY }}
          VERSION: ${{ github.ref_name }}

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.archive_name }}.zip

  ##############################################################################
  ### Core publish
  ##############################################################################
  python-publish:
    needs: packages
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - source-dir: x86_64-apple-darwin/wheels
          - source-dir: python-x86_64-unknown-linux-gnu
          - source-dir: x86_64-pc-windows-gnu/wheels

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pip # caching pip dependencies

      - name: List directory
        if: contains(runner.os, 'Linux')
        run: find .

      - name: Install requirements
        run: |
          pip install twine

      - name: Publish .whl
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          twine upload -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}" ${{ matrix.source-dir }}/*.whl || true
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  wasm-publish:
    needs: packages
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          target: ${{ inputs.target }}
          override: true

      - name: Install wasm-pack
        run: |
          cargo install wasm-pack

      - name: Publishing Wasm
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc

          pushd crates/cover_crypt
          wasm-pack build --target web --release --features wasm_bindgen
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/findex
          wasm-pack build --target web --release --features wasm_bindgen
          wasm-pack pack
          wasm-pack publish || true
          popd

          pushd crates/fpe
          wasm-pack build --target web --release --features wasm_bindgen
          wasm-pack pack
          wasm-pack publish || true
          popd

        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

  cargo-publish:
    needs: packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Publishing
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "[registry]" > ~/.cargo/credentials
          echo "token = \"$CRATES_IO\"" >> ~/.cargo/credentials

          pushd crates/cover_crypt
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/findex
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/fpe
          cargo publish --token $CRATES_IO || true
          popd
          pushd crates/cloudproof
          cargo publish --token $CRATES_IO || true
          popd
        env:
          CRATES_IO: ${{ secrets.CRATES_IO }}

  cleanup:
    needs:
      - packages
    uses: ./.github/workflows/cleanup_cache.yml
    secrets: inherit
