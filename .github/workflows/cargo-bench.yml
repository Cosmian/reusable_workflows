---
name: Cargo benchmarks

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      features:
        required: false
        default: ''
        type: string
      exclusions:
        required: false
        type: string
        default: ''
      force:
        required: false
        default: false
        type: boolean

jobs:
  bench_cleanup:
    runs-on: [self-hosted, not-sgx]
    container:
      image: rust:latest

    steps:
      - name: Chown user
        run: |
          echo "USER: $USER"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          chown -R $USER:$USER $GITHUB_WORKSPACE

  benchmark:
    needs: bench_cleanup
    runs-on: [self-hosted, not-sgx]
    container:
      image: rust:latest
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # # Solve perm denied issue on GA
      # # see: https://github.com/actions/checkout/issues/211
      # - name: Chown user
      #   run: |
      #     chown -R $USER:$USER $GITHUB_WORKSPACE
      #     env
      - uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            pkg/
          key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}

      - name: Install tooling for benchmarks
        run: |
          apt update
          apt install -y gnuplot
          cargo install --locked criterion-table || true
          cargo install --locked cargo-criterion || true
          apt install -y python3-dev python3-pip

      - run: cat /proc/cpuinfo

      - name: Benchmarks build but do not run
        if: inputs.features != ''
        run: cargo criterion --features ${{ inputs.features }} --no-run

      - name: Benchmarks
        if: inputs.force && inputs.features != ''
        run: |
          cargo criterion --features ${{ inputs.features }} --message-format=json | criterion-table > BENCHMARKS.md

      - name: Upload benchmarks
        if: inputs.force && inputs.features != ''
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks_${{ inputs.features }}
          path: BENCHMARKS.md
          retention-days: 1
          if-no-files-found: error

      - name: Benchmarks all features build but do not run
        if: inputs.features == ''
        run: |
          cargo criterion --workspace ${{ inputs.exclusions }} --all-features --no-run

      - name: Benchmarks all features
        if: inputs.force && inputs.features == ''
        run: |
          cargo criterion --workspace ${{ inputs.exclusions }} --all-features --message-format=json | criterion-table > BENCHMARKS.md

      - name: Upload benchmarks all features
        if: inputs.force && inputs.features == ''
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks
          path: BENCHMARKS.md
          retention-days: 1
          if-no-files-found: error
