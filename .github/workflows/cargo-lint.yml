---
name: Cargo lints & tests

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string

jobs:
  lint:
    runs-on: ubuntu-22.04

    # Redis can be required to run tests
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Dump Github variables
        uses: crazy-max/ghaction-dump-context@v1

      - uses: actions/checkout@v1

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          override: true
          components: rustfmt, clippy

      - name: Install tooling for benchmarks
        run: |
          sudo apt update
          sudo apt install -y gnuplot
          cargo install --locked criterion-table || true
          cargo install --locked cargo-criterion || true

      # Ensure all code has been formatted with rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --color always

      - name: Static analysis
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets --all-features -- -D warnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --workspace --all-targets --all-features

      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --workspace --all-features --doc
