---
name: Cargo

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      feature:
        required: true
        type: string

jobs:
  android-job:
    name: NDK for feature ${{ inputs.feature }}
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        id: github-cache
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            pkg/
            target/
          key: ${{ runner.os }}-android-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-android-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          target: aarch64-linux-android
          override: true

      - name: specific-pre-requisites
        run: |
          ANDROID_NDK_HOME=/opt/android-ndk
          ANDROID_NDK_VERSION=r25b

          sudo apt-get update
          sudo apt-get install -y libunwind-dev build-essential pkg-config libssl-dev time unzip binaryen

          mkdir /opt/android-ndk-tmp
          pushd /opt/android-ndk-tmp
          wget -q https://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux.zip
          unzip -q android-ndk-${ANDROID_NDK_VERSION}-linux.zip
          mv ./android-ndk-${ANDROID_NDK_VERSION} ${ANDROID_NDK_HOME}
          cd ${ANDROID_NDK_HOME}
          rm -rf /opt/android-ndk-tmp
          export PATH=$PATH:$ANDROID_NDK_HOME
          popd

          rustup target add i686-linux-android x86_64-linux-android armv7-linux-androideabi aarch64-linux-android
          cargo install --locked cargo-ndk || true
          cargo ndk -t x86 -t x86_64 -t armeabi-v7a -t arm64-v8a -o jniLibs build --release --features ${{ inputs.feature }} --lib

      # - name: NDK build release with feature ${{ inputs.feature }}
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: ndk
      #     args: -t x86 -t x86_64 -t armeabi-v7a -t arm64-v8a -o jniLibs build --release --features ${{ inputs.feature }} --lib

      - name: Upload cargo binaries
        uses: actions/upload-artifact@v3
        with:
          name: android
          path: jniLibs
          retention-days: 1
          if-no-files-found: error
